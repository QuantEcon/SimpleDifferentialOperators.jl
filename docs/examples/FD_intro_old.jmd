```julia
using SimpleDifferentialOperators,Plots, LinearAlgebra
```

## Gentle Introduction to Upwind Finite Differences

This notebook is a brief tutorial on upwind finite difference method for solving
linear ordinary differential equations.

In particular, this tutorial will be motivated by the following problem. Consider payoffs
$u(x)$ for a stochastic process $x\in [0.2,04]$ with infitesimal generate $\mathcal{L}_x$
discounted at rate $\rho > 0$. Then the payoffs can be valued by the
Bellman equation:

$$
\begin{equation}
  \rho v(x) = u(x) + \mathcal{L}_x v(x)
\end{equation}
$$

We will consider the example $\mathcal{L}_x \equiv \mu \partial_x + \frac{\sigma^2}{2}\partial_{xx}$
where $\mu = -0.1$ and $\sigma = 0.1$. We will consider $u(x) = \log(x)$ and we will impose the boundary
conditions that $v'(0.2) = v'(0.4) = 0$.

We will begin by first discretizing the interval $[0.2,0.4]$. Define $x = \{0.2, 0.3, 0.4\}$. Additionally,
we will require the extended grid $\bar{x} = \{0.1,0.2,0.3,0.4,0.5\}$ in order to compute $\partial_x v(x)$ and
$\partial_{xx}v(x)$ at the original boundaries $0.2$ and $0.4$.

First, we will discretize $v'(x_i)$ for each $x_i\in x$.

Note that by forward difference, for an arbitrary $x$ and $\Delta$:

$$
\begin{equation}
  v'(x) \approx \frac{v(x+\Delta)-v(x)}{\Delta}
\end{equation}
$$

Additionally, by backward difference,

$$
\begin{equation}
  v'(x) \approx \frac{v(x)-v(x-\Delta)}{\Delta}
\end{equation}
$$

Since in the stochastic process for $x$ the drift $\mu = -0.1 < 0$, we will
approximate $v'(x)$ by the backward difference. In our instance, the grid $x$ has
uniformly spaced grid points, so $\Delta = 0.1$ for each $x_i\in x$.

So it follows that:

$$
\begin{equation}
  v'(0.2) = 0 \text{ by the reflecting boundary condition}
\end{equation}
$$

$$
\begin{equation}
  v'(0.3) \approx \frac{v(0.3)-v(0.2)}{0.1}
\end{equation}
$$

$$
\begin{equation}
  v'(0.4) \approx \frac{v(0.4)-v(0.3)}{0.1}
\end{equation}
$$

The above equations give us a linear system and hence we can represent them as follows:

$$
\begin{equation}
  \begin{bmatrix}
    v'(0.2) \\
    v'(0.3) \\
    v'(0.4) \\
  \end{bmatrix}
  \approx
  \frac{1}{0.1}
  \begin{bmatrix}
    0 & 0 & 0 \\
    -1 & 1 & 0 \\
    0 & -1 & 1 \\
  \end{bmatrix}
  \begin{bmatrix}
    v(0.2) \\
    v(0.3) \\
    v(0.4) \\
  \end{bmatrix}
\end{equation}
$$

Additionally, we will define $L_{1-}$ to be:

$$
\begin{equation}
  L_{1-} = \frac{1}{0.1}
  \begin{bmatrix}
    0 & 0 & 0 \\
    -1 & 1 & 0 \\
    0 & -1 & 1 \\
  \end{bmatrix}
\end{equation}
$$

```julia
L_1m = 10*[0 0 0; -1 1 0; 0 -1 1]
```

(Note, a similar derivation using the forward differences would yield an analagous
matrix $L_{1+}$)

In a similar manner, we will discretize $v''(x_i)$ for each $x_i \in x = \{0.2,0.3, 0.4\}$.

Note, by central difference, for arbitrary $x$ and $\Delta$:

$$
\begin{equation}
  v''(x) \approx \frac{v(x+\Delta)-2v(x) + v(x-\Delta)}{\Delta^2}
\end{equation}
$$

So it follows that:

$$
\begin{equation}
  v''(0.2) \approx \frac{v(0.3)-2v(0.2) + v(0.1)}{0.1^2}
\end{equation}
$$

Note that by the boundary conditions and backward difference:

$$
\begin{equation}
0 = v'(0.2) \approx \frac{v(0.2)-v(0.1)}{0.1}
\end{equation}
$$

which implies that $v(0.2) = v(0.1)$.

Therefore,

$$
\begin{equation}
  v''(0.2) \approx \frac{v(0.3)-v(0.2)}{0.1^2}
\end{equation}
$$

Then $0.3$:

$$
\begin{equation}
  v''(0.3) \approx \frac{v(0.4)-2v(0.3) + v(0.2)}{0.1^2}
\end{equation}
$$

For $0.4$:

$$
\begin{equation}
  v''(0.4) \approx \frac{v(0.5)-2v(0.4) + v(0.3)}{0.1^2}
\end{equation}
$$

Note that by the boundary conditions and forward difference:

$$
\begin{equation}
0 = v'(0.4) \approx \frac{v(0.5)-v(0.4)}{0.1}
\end{equation}
$$

which implies that $v(0.4) = v(0.5)$.

Therefore,

$$
\begin{equation}
  v''(0.4) \approx \frac{-v(0.4) + v(0.3)}{0.1^2}
\end{equation}
$$

The above equations give us a linear system and hence we can represent them as follows:

$$
\begin{equation}
  \begin{bmatrix}
    v''(0.2) \\
    v''(0.3) \\
    v''(0.4) \\
  \end{bmatrix}
  \approx
  \frac{1}{0.1^2}
  \begin{bmatrix}
    -1 & 1 & 0 \\
    1 & -2 & 1 \\
    0 & 1 & -1 \\
  \end{bmatrix}
  \begin{bmatrix}
    v(0.2) \\
    v(0.3) \\
    v(0.4) \\
  \end{bmatrix}
\end{equation}
$$

Additionally, we will define $L_2$ to be:

$$
\begin{equation}
  L_2 = \frac{1}{0.1^2}
  \begin{bmatrix}
    -1 & 1 & 0 \\
    1 & -2 & 1 \\
    0 & 1 & -1 \\
  \end{bmatrix}
\end{equation}
$$

```julia
L_2 = 100*[-1 1 0; 1 -2 1; 0 1 -1]
```

Treating $x= \{0.2,0.3,0.4\}$ as an array $x = [0.2, 0.3, 0.4], then
considering the original Bellman equation, we obtain:

$$
\begin{equation}
  \rho v(x) \approx u(x) +\mu L_{1-}v(x) +\frac{\sigma^2}{2}L_2v(x)
\end{equation}
$$

Which further implies:

$$
\begin{equation}
(\rho I - \mu L_{1-} - \frac{\sigma^2}{2}L_2)v(x) \approx u(x)
\end{equation}
$$

Then setting:

$$
\begin{equation}
L = \rho I - \mu\frac{1}{0.1}L_{1-} - \frac{\sigma^2}{2}L_2
\end{equation}
$$

```julia
x = [0.2, 0.3, 0.4]

function u(x)
    return log(x)
end

ρ = 0.05
μ = -0.1
σ = 0.1

L = I*ρ - μ*L_1m - σ^2 / 2 * L_2
```

We obtain the linear system:

$$
\begin{equation}
Lv(x) \approx u(x)
\end{equation}
$$

And thus we obtain:

$$
\begin{equation}
v(x) \approx L^{-1}u(x)
\end{equation}
$$


```julia
v = L \ u.(x)
```

### Using the SDO Package

We can solve the same problem using the simple differential operators package:

```julia
x̄ = range(0.1, 0.5, length = 5)
x = interiornodes(x̄)

bc = (Reflecting(), Reflecting())
L = I * ρ - μ*L₁₋(x̄, bc) - σ^2 / 2 * L₂(x̄, bc)

v_SDO = L \ u.(x)
```
